#!/bin/bash

mkdir -p build

g++ -std=c++17 \
    -Isrc -Imodel -Icommon \
    src/main.cpp \
    model/Galaxy.cpp model/Planet.cpp model/Model.cpp \
    common/Reader.cpp \
    -o build/Warhammer10k





#!/bin/bash

OUTPUT="warhammer10k"
SRC_DIRS=(
    "."
    "common"

    "model"
    "src"
    "view"
)

# Verificar que g++ est√© instalado
command -v g++ >/dev/null 2>&1 || { 
    echo "‚ùå g++ no est√° instalado. Por favor instala GCC:"
    echo "   En Ubuntu/Debian: sudo apt install g++"
    echo "   En Fedora: sudo dnf install gcc-c++"
    echo "   En Arch: sudo pacman -S gcc"
    exit 1
}

# Encontrar todos los archivos .cpp en los directorios fuente
SOURCES=()
for dir in "${SRC_DIRS[@]}"; do
    while IFS= read -r -d $'\0' file; do
        SOURCES+=("$file")
    done < <(find "$dir" -name "*.cpp" -print0)
done

if [ ${#SOURCES[@]} -eq 0 ]; then
    echo "‚ùå No se encontraron archivos .cpp en los directorios fuente"
    exit 1
fi

# Flags de compilaci√≥n
CXX_FLAGS="-std=c++11 -Wall -Wextra"
DEBUG_FLAGS="-g"  # Opciones de depuraci√≥n
INCLUDE_DIRS="-I. -Icommon -Icontroller -Imodel -Isrc -Iview"  # Todos los directorios de includes

echo "üî® Compilando WARHAMMER10K..."
echo "üìù Archivos fuente encontrados:"
printf '‚Ä¢ %s\n' "${SOURCES[@]}"

echo ""
echo "üöÄ Compilando..."

# Comando de compilaci√≥n
g++ "${SOURCES[@]}" $CXX_FLAGS $DEBUG_FLAGS $INCLUDE_DIRS -o $OUTPUT

if [ $? -eq 0 ]; then
    echo ""
    echo "‚úÖ Compilado correctamente: ./$OUTPUT"
    
    # Ejecutar el programa autom√°ticamente
    echo ""
    ./$OUTPUT
else
    echo ""
    echo "‚ùå Error de compilaci√≥n"
    exit 1
fi